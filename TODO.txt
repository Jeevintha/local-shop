

## ðŸ’¥ BACKEND (Node.js + Express + MongoDB + JWT)

###  1. **Project Setup**
- [] Initialize Node project (`npm init -y`)
- []' Setup Express server
- [] Connect MongoDB with Mongoose
- [] Setup `.env` and config
- [ ] Enable CORS and JSON parsing

---

###  2. **Auth System**
- [ ] Create User Schema (name, email, password, address, role)
- [ ] Hash passwords with bcrypt
- [] Create JWT token utils
- [] Implement `/auth/register` and `/auth/login`
- [ ] Create `authMiddleware` to protect routes
- [ ] Add role-based auth (`user`, `admin`)

---

### âœ… 3. **Shop Management**
- [âœ…] Create Shop Schema:
  -âœ… name, address, type, geoLocation (lat/lon), ownerId, images, rating, etc.
- [ ] CRUD APIs for shops:
  - [ ] `POST /shops` â€“ create (admin only)
  - [ ] `GET /shops` â€“ list all with filters (city, type, etc.)
  - [ ] `GET /shops/:id` â€“ get one shop
  - [ ] `PUT /shops/:id` â€“ update (admin only)
  - [ ] `DELETE /shops/:id` â€“ delete (admin only)

---

### âœ… 4. **Search & Filters**
- [ ] Add location-based filtering (city, lat/lon radius)
- [ ] Implement search by name/type
- [ ] Add pagination and sorting (by rating, distance)

---

### âœ… 5. **User Features**
- [ ] Add favorites/saved shops
- [ ] `POST /users/save-shop/:shopId`
- [ ] `GET /users/saved-shops`

---

### âœ… 6. **Optional Add-ons**
- [ ] Shop reviews & ratings
- [ ] Admin dashboard analytics endpoint
- [ ] GeoJSON Index for fast location search
- [ ] Upload shop image URLs or use Cloudinary

---

## âš¡ FRONTEND (React + Tailwind + Axios + React Router)

### âœ… 1. **Project Setup**
- [ ] Create React project (Vite or CRA)
- [ ] Setup Tailwind CSS
- [ ] Setup `react-router-dom` and routing structure
- [ ] Create API service (Axios wrapper)
- [ ] Global state (Context API or Recoil)

---

### âœ… 2. **Auth Pages**
- [ ] Login page (form + POST to `/auth/login`)
- [ ] Register page (form + POST to `/auth/register`)
- [ ] Store JWT token in `localStorage`
- [ ] Setup ProtectedRoute component
- [ ] Auth context with user data

---

### âœ… 3. **Shop Exploration Pages**
- [ ] Home Page â€“ Search + Filters
- [ ] Shops List Page (card/grid view)
- [ ] Single Shop Page â€“ `/shops/:id`
  - [ ] Show details, map (optional), save button

---

### âœ… 4. **Admin Dashboard**
- [ ] Admin can:
  - [ ] Add a shop
  - [ ] Edit shop details
  - [ ] Delete a shop
  - [ ] See all their shops
- [ ] Create Admin-only layout and route protection

---

### âœ… 5. **User Features**
- [ ] User profile page (view saved shops)
- [ ] Save/unsave shop buttons
- [ ] Saved shops page

---

### âœ… 6. **UI Polish**
- [ ] Toast notifications
- [ ] Loading spinners
- [ ] Form validations
- [ ] Mobile responsiveness
- [ ] Clean Tailwind UI with dark mode toggle (optional)

---

### âœ… 7. **Bonus Features**
- [ ] Reviews/comments on shops
- [ ] Ratings display
- [ ] Share shop link (copy/share)
- [ ] PWA setup for mobile use
- [ ] Maps integration (Google Maps / Leaflet)
- [ ] SEO meta tags for shop pages

---

## ðŸ“¦ Deployment & Final Touch
- [ ] Backend: Render / Railway / VPS / EC2
- [ ] Frontend: Vercel / Netlify
- [ ] MongoDB: Atlas
- [ ] Add `.env` config to deployments
- [ ] Domain setup (`localshops.raghulkannan.me`?)
/